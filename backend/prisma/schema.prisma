// Prisma Schema for MOMO Novel Database
// Generated by Engineer A on 2025-10-27

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ==========================================
// 用户表
// ==========================================
model User {
  id                  Int       @id @default(autoincrement())
  username            String    @unique @db.VarChar(50)
  email               String    @unique @db.VarChar(100)
  password            String    @db.VarChar(255)
  avatar              String?   @db.VarChar(255)
  bio                 String?   @db.Text
  
  // 会员信息
  membershipType      String?   @default("free") @db.VarChar(20)
  membershipExpiresAt DateTime? @db.DateTime(0)
  
  // 关系
  novels              Novel[]
  comments            Comment[]
  likes               Like[]
  favorites           Favorite[]
  
  // 时间戳
  createdAt           DateTime  @default(now()) @db.DateTime(0)
  updatedAt           DateTime  @updatedAt @db.DateTime(0)

  // 索引
  @@index([email])
  @@index([username])
  @@map("users")
}

// ==========================================
// 小说表
// ==========================================
model Novel {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(200)
  summary     String?   @db.Text
  content     String    @db.LongText
  category    String?   @db.VarChar(50)
  tags        String?   @db.Text
  
  // 封面配置
  coverType   String    @default("text") @db.VarChar(20)
  coverData   String?   @db.Text
  
  // 统计数据
  views       Int       @default(0)
  likes       Int       @default(0)
  favorites   Int       @default(0)
  
  // 状态和权限
  status      String    @default("draft") @db.VarChar(20)
  accessLevel String    @default("free") @db.VarChar(20)
  
  // 作者关系
  authorId    Int
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  
  // 关系
  comments    Comment[]
  likeList    Like[]
  favoriteList Favorite[]
  
  // 时间戳
  publishedAt DateTime? @db.DateTime(0)
  createdAt   DateTime  @default(now()) @db.DateTime(0)
  updatedAt   DateTime  @updatedAt @db.DateTime(0)

  // 索引
  @@index([authorId])
  @@index([status])
  @@index([category])
  @@index([views])
  @@index([createdAt])
  @@fulltext([title, summary])
  @@map("novels")
}

// ==========================================
// 评论表
// ==========================================
model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  
  // 小说关系
  novelId   Int
  novel     Novel    @relation(fields: [novelId], references: [id], onDelete: Cascade)
  
  // 用户关系
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // 时间戳
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @updatedAt @db.DateTime(0)

  // 索引
  @@index([novelId])
  @@index([userId])
  @@index([createdAt])
  @@map("comments")
}

// ==========================================
// 点赞表
// ==========================================
model Like {
  id        Int      @id @default(autoincrement())
  
  // 小说关系
  novelId   Int
  novel     Novel    @relation(fields: [novelId], references: [id], onDelete: Cascade)
  
  // 用户关系
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // 时间戳
  createdAt DateTime @default(now()) @db.DateTime(0)

  // 索引和约束
  @@unique([novelId, userId])
  @@index([novelId])
  @@index([userId])
  @@map("likes")
}

// ==========================================
// 收藏表
// ==========================================
model Favorite {
  id        Int      @id @default(autoincrement())
  
  // 小说关系
  novelId   Int
  novel     Novel    @relation(fields: [novelId], references: [id], onDelete: Cascade)
  
  // 用户关系
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // 时间戳
  createdAt DateTime @default(now()) @db.DateTime(0)

  // 索引和约束
  @@unique([novelId, userId])
  @@index([novelId])
  @@index([userId])
  @@index([createdAt])
  @@map("favorites")
}

